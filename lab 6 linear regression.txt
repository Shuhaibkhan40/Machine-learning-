6) regression analysis using linear regression
#linear regression
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.datasets import load_iris
In [3]:
iris = load_iris()
In [4]:
X = iris.data
In [5]:
y = iris.target
In [6]:
X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.7, test_size = 0.3, random_state=100)
In [14]:
X_train
Out[14]:
[array([[4.6, 3.4, 1.4, 0.3],
        [5. , 3. , 1.6, 0.2],
        [5.1, 3.7, 1.5, 0.4],
        [5.8, 2.6, 4. , 1.2],
        [4.9, 3.1, 1.5, 0.1],
        [5.1, 3.3, 1.7, 0.5],
        [5. , 3.2, 1.2, 0.2],
from sklearn.linear_model 
import LinearRegression
lr = LinearRegression()
In [18]:
lr.fit(X_train,y_train)
Out[18]:
LinearRegression()
In [19]:
y_pred = lr.predict(X_test)
In [20]:
mse = mean_squared_error(y_test, y_pred)
In [21]:
y_pred = lr.predict(X_test)
In [22]:
mse = mean_squared_error(y_test, y_pred)
print(mse)
0.035170909783059694
r2 = r2_score(y_test, y_pred) print(r2)
In [23]:
mae = mean_absolute_error(y_test, y_pred)
print(mae)
0.13682917742580056

